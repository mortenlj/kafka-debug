name: Build

on: [ push ]

env:
  main_image: ghcr.io/${{ github.repository }}
  cache_image: ghcr.io/${{ github.repository }}/cache:cache

jobs:
  setup:
    name: Set variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Set image version"
        id: constants
        run: |
          export version="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "VERSION=${version}" >> ${GITHUB_OUTPUT}
    outputs:
      VERSION: "${{ steps.constants.outputs.VERSION }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    env:
      VERSION: "${{ needs.setup.outputs.VERSION }}"
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - uses: actions/checkout@v3
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and possibly push
        env:
          EARTHLY_PUSH: "${{ github.ref == 'refs/heads/master' }}"
        run: |
          ./earthlyw --version
          ./earthlyw --ci --output "--remote-cache=${cache_image}" +deploy "--main_image=${main_image}" "--VERSION=${VERSION}"
      - name: Create release
        if: github.ref == 'refs/heads/master'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ needs.setup.outputs.VERSION }}"
          name: "Release ${{ needs.setup.outputs.VERSION }}"
          draft: false
          prerelease: false
          generate_release_notes: true
